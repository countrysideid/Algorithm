Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.




class Solution {
public:
    /**
     * @param nums: a rotated sorted array
     * @return: the minimum number in the array
     */
    int findMin(vector<int> &nums) {
        // write your code here
        int l = 0, r = nums.size()-1;
        while (l+1<r){
            int mid = (l+r)/2;
            //if (nums[mid] == nums[r])
            //   return nums[mid];
            if (nums[r] > nums[mid])
                r = mid;
            else
                l = mid;
            //else
             //return nums[l];
        }
        if (nums[l] < nums[r])
            return nums[l];
        return nums[r];
    }
};
