python

def BinarySearch(nums,target):
  if nums is None or len(nums) == 0:
    return -1
  start = 0
  end = len(nums)
  while start + 1< end:
    mid = (start + end) //2
    if nums[mid] == target:
      end = mid
    elif nums[mid] < target:
      start = mid
    else:
      end = mid
     
  if nums[start] == target:
    return start
  if nums[end] == target:
    return end
  return -1
  
  
  calculate x^n 

python:

def power(x, n):
    if n == 0:
        return 1
    
    if n % 2 == 0:
        tmp = power(x, n // 2)
        return tmp * tmp
    else:
        tmp = power(x, n // 2)
        return tmp * tmp * x
 。
c++:

int power(int x, int n) {
    if (n == 0) return 1;
    if (n % 2 == 0) {
        int tmp = power(x, n / 2);
        return tmp * tmp;
    } else {
        int tmp = power(x, n / 2);
        return tmp * tmp * x;
    }
}



求最大公约数 gcd

python

def gcd(big, small):
    if small != 0:
        return gcd(small, big % small)
    else:
        return big
        
 c++
 int gcd(int big, int small) {
    if (small != 0) {
        return gcd(small, big % small);
    } else {
        return big;
    }
}
